apiVersion: v1
kind: Namespace
metadata:
  name: test-ingress
  labels:
    labels-namespace: test-ingress
---
apiVersion: v1
kind: Namespace
metadata:
  name: team-beta
  labels:
    labels-namespace: team-beta
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpha-app
  namespace: test-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpha-app
  template:
    metadata:
      labels:
        app: alpha-app
    spec:
      containers:
      - name: my-container
        image: laurentsogeti/ckad_formation_ingress:0.0.5
        imagePullPolicy: Always
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beta-app
  namespace: team-beta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beta-app
  template:
    metadata:
      labels:
        app: beta-app
    spec:
      containers:
      - name: my-container
        image: laurentsogeti/ckad_formation_ingress:0.0.5
        imagePullPolicy: Always
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name



---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: alpha-app
  namespace: test-ingress
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: alpha-app
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: beta-app
  namespace: team-beta
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: beta-app
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  name: team-beta-ext
  namespace: test-ingress
spec:
  type: ExternalName
  externalName: beta-app.team-beta.svc.cluster.local
  ports:
  - port: 80
    targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alpha-app-ingress
  namespace: test-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: toto.fr
    http:
      paths:
      - path: /something
        pathType: Prefix
        backend:
          service:
            name: alpha-app
            port:
              number: 80
      - path: /team-beta
        pathType: Prefix
        backend:
          service:
            name: team-beta-ext
            port:
              number: 80